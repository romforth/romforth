# code.prims : mapping from the Forth primitives to MSP430 assembly
#
# Copyright (c) 2023 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

cold	: call #init ; mov #rom, ip
next	: br @ip+
bye	: ret
dup	: push tos ;
2drop	: pop tos
drop	: pop tos ;
key	: dup ; mov #0xff, w ; mov.b @w, tos ;
emit	: mov #0xff, w ; mov.b tos, @w ; drop ;
lit	: dup ; mov @ip+, tos ;
neg	: inv tos ; inc tos ;
j	: add @ip+, ip ;
jz	: and tos, tos ; drop ; jz j ; add #2, ip ;
jnz	: and tos, tos ; drop ; jnz j ; add #2, ip ;
inc	: inc tos ;
dec	: dec tos ;
inv	: inv tos ;
nip	: pop nos ;
dip	: push nos ;
-	: neg
+	: nip ; add nos, tos ;
&	: nip ; and nos, tos ;
|	: nip ; bis nos, tos ;
^	: nip ; xor nos, tos ;
swap	: nip ; dup
t_n	: mov nos, tos ;
pick	: rla tos ; add sp, tos
@	: mov @tos, tos ;
stick	: rla tos ; add sp, tos
!	: pop @tos ; drop ;
c@	: mov.b @tos, tos ;
c!	: pop.b @tos ; drop ;
sp@!	: mov sp, nos ; mov tos, sp ; t_n ;
rp@!	: mov rp, nos ; mov tos, rp ; t_n ;
>r	: decd rp ; mov tos, @rp ; drop ;
r>	: dup ; mov @rp+, tos ;
exec	: mov tos, nos ; drop ; br nos
exit	: mov @rp+, ip ;
call	: decd rp ; mov ip, @rp ; mov tos, ip ; drop ;
<<	: nip ; 1 : rla nos ; dec tos ; jnz 1b ; t_n ;
>>	: nip ; 1 : rra nos ; dec tos ; jnz 1b ; t_n ;
over	: dup ; mov 2(sp), tos ;

_fa_ke_	: .data

var here .word mem
var state .byte 1
