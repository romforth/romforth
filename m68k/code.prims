# code.prims : mapping from the Forth primitives to native code (m68k assembly)
#
# Copyright (c) 2023 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

define ip	%a0
define w	%d0
define tos	%d1
define nos	%d2
define temp	%d7
define cache	%a1
define rp	%a6
define sp	%a7

cold	: move.l #rom, ip ; move.l #next, cache
inner	: move.b (ip)+, w ; jmp (cache,w)
next	: bras inner
dup	: move.l tos, -(sp) ;
2drop	: move.l (sp)+, tos
drop	: move.l (sp)+, tos ;
key	: bra key1
emit	: bra emit1
lit	: dup ; move.l (ip)+, tos ;
neg	: neg.l tos ;
jdrop	: drop
j	: move.b (ip)+, temp ; add.l temp, ip ;
jz	: neg.l tos ; bcc jdrop ; add.l #1, ip ;
jnz	: neg.l tos ; bcs jdrop ; add.l #1, ip ;
inc	: add.l #1, tos ;
dec	: sub.l #1, tos ;
inv	: not.l tos ;
dip	: move.l nos, -(sp) ;
nip	: move.l (sp)+, nos ;
-	: neg
+	: nip ; add.l nos, tos ;
&	: nip ; and.l nos, tos ;
|	: nip ; or.l nos, tos ;
^	: nip ; eor.l nos, tos ;
swap	: nip ; dup
t_n	: move.l nos, tos ;
pick	: asl.l #2, tos ; add.l sp, tos
@	: move.l (tos), tos ;
stick	: asl.l #2, tos ; add.l sp, tos
!	: move.l (sp)+, (tos) ; drop ; bra inner
c@	: move.b (tos), tos ; and.l #0xff, tos ; bra inner
c!	: nip ; move.b nos, (tos) ; drop ; bra inner
sp@!	: exg sp, tos ; bra inner
rp@!	: exg rp, tos ; bra inner
bye	: move.l #247, w ; move.l #0, tos ; trap #0 ; .data

var here	.long mem
var state	.byte 1
