#!/usr/bin/perl -w

# runallsteps : regression test suite
#
# Copyright (c) 2023-2024 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

use strict;

my $c_check=1;
my $pdp11_check=1;
my $x86_check=1;
my $x86as_check=1;
my $x86user_check=1;
my $x86_32_check=1;
my $x86_sys_check=1;
my $m68k_check=1;
my $sparc_check=1;
my $z80_check=1;
my $z80c_check=1;
my $z180c_check=1;
my $z80n_c_check=1;
my $msp430as_check=1;
my $armzigcc_check=1;
my $armas_check=1;
my $rv64as_check=1;
my $riscv32as_check=1;
my $msp430stc_check=1;
my $z80stc_check=1;
my $msp430f_check=1;
my $msp430_f_check=1;
my $nqhzig_check=1;
my $wasm32c_check=1;
my $pdk14stc_check=1;
my $pdk14thr1_check=1;
my $m6502c_check=1;
my $m6502stc_check=1;
if (@ARGV) {
	$c_check=0;
	$pdp11_check=0;
	$x86_check=0;
	$x86as_check=0;
	$x86user_check=0;
	$x86_32_check=0;
	$x86_sys_check=0;
	$m68k_check=0;
	$sparc_check=0;
	$z80_check=0;
	$z80c_check=0;
	$z180c_check=0;
	$z80n_c_check=0;
	$msp430as_check=0;
	$armzigcc_check=0;
	$armas_check=0;
	$rv64as_check=0;
	$riscv32as_check=0;
	$msp430stc_check=0;
	$z80stc_check=0;
	$msp430f_check=0;
	$msp430_f_check=0;
	$nqhzig_check=0;
	$wasm32c_check=0;
	$pdk14stc_check=0;
	$pdk14thr1_check=0;
	$m6502c_check=0;
	$m6502stc_check=0;
	for my $d (@ARGV) {
		$pdp11_check=1 if ( $d eq "pdp11");
		$c_check=1 if ( $d eq "C");
		$x86_check=1 if ( $d eq "x86");
		$x86as_check=1 if ( $d eq "x86-as");
		$x86user_check=1 if ( $d eq "x86-user");
		$x86_32_check=1 if ( $d eq "x86-32");
		$x86_sys_check=1 if ( $d eq "x86-sys");
		$m68k_check=1 if ( $d eq "m68k");
		$sparc_check=1 if ( $d eq "sparc");
		$z80_check=1 if ( $d eq "z80");
		$z80c_check=1 if ( $d eq "z80-c");
		$z180c_check=1 if ( $d eq "z180-sdcc");
		$z80n_c_check=1 if ( $d eq "z80n-sdcc");
		$msp430as_check=1 if ( $d eq "msp430-as");
		$armzigcc_check=1 if ( $d eq "arm-zigcc");
		$armas_check=1 if ( $d eq "arm64-sys");
		$rv64as_check=1 if ( $d eq "rv64-sys");
		$riscv32as_check=1 if ( $d eq "rv32-sys");
		$msp430stc_check=1 if ( $d eq "msp430-stc");
		$z80stc_check=1 if ( $d eq "z80-stc");
		$msp430f_check=1 if ( $d eq "msp430-fcode");
		$msp430_f_check=1 if ( $d eq "msp430-f");
		$nqhzig_check=1 if ( $d eq "nqh-zig");
		$wasm32c_check=1 if ( $d eq "wasm32-c");
		$pdk14stc_check=1 if ( $d eq "pdk14-stc");
		$pdk14thr1_check=1 if ( $d eq "pdk14-thr1");
		$m6502c_check=1 if ( $d eq "6502-sdcc");
		$m6502stc_check=1 if ( $d eq "6502-stc");
	}
}

my ($x, $step);

my $c_step;
$x=`cat C/stepfile`;
$x=~s/^/\$/;
eval $x;
$c_step=$step;

my $pdp11_step;
$x=`cat pdp11/stepfile`;
$x=~s/^/\$/;
eval $x;
$pdp11_step=$step;

my $x86_step;
$x=`cat x86/stepfile`;
$x=~s/^/\$/;
eval $x;
$x86_step=$step;

my $x86as_step;
$x=`cat x86-as/stepfile`;
$x=~s/^/\$/;
eval $x;
$x86as_step=$step;

my $x86user_step;
$x=`cat x86-user/stepfile`;
$x=~s/^/\$/;
eval $x;
$x86user_step=$step;

my $x86_32_step;
$x=`cat x86-32/stepfile`;
$x=~s/^/\$/;
eval $x;
$x86_32_step=$step;

my $x86_sys_step;
$x=`cat x86-sys/stepfile`;
$x=~s/^/\$/;
eval $x;
$x86_sys_step=$step;

my $m68k_step;
$x=`cat m68k/stepfile`;
$x=~s/^/\$/;
eval $x;
$m68k_step=$step;

my $sparc_step;
$x=`cat sparc/stepfile`;
$x=~s/^/\$/;
eval $x;
$sparc_step=$step;

my $z80_step;
$x=`cat z80/stepfile`;
$x=~s/^/\$/;
eval $x;
$z80_step=$step;

my $z80c_step;
$x=`cat z80-c/stepfile`;
$x=~s/^/\$/;
eval $x;
$z80c_step=$step;

my $z180c_step;
$x=`cat z180-sdcc/stepfile`;
$x=~s/^/\$/;
eval $x;
$z180c_step=$step;

my $z80n_c_step;
$x=`cat z80n-sdcc/stepfile`;
$x=~s/^/\$/;
eval $x;
$z80n_c_step=$step;

my $msp430as_step;
$x=`cat msp430-as/stepfile`;
$x=~s/^/\$/;
eval $x;
$msp430as_step=$step;

my $armzigcc_step;
$x=`cat arm-zigcc/stepfile`;
$x=~s/^/\$/;
eval $x;
$armzigcc_step=$step;

my $armas_step;
$x=`cat arm64-sys/stepfile`;
$x=~s/^/\$/;
eval $x;
$armas_step=$step;

my $rv64as_step;
$x=`cat rv64-sys/stepfile`;
$x=~s/^/\$/;
eval $x;
$rv64as_step=$step;

my $riscv32as_step;
$x=`cat rv32-sys/stepfile`;
$x=~s/^/\$/;
eval $x;
$riscv32as_step=$step;

my $msp430stc_step;
$x=`cat msp430-stc/stepfile`;
$x=~s/^/\$/;
eval $x;
$msp430stc_step=$step;

my $z80stc_step;
$x=`cat z80-stc/stepfile`;
$x=~s/^/\$/;
eval $x;
$z80stc_step=$step;

my $msp430f_step;
$x=`cat msp430-fcode/stepfile`;
$x=~s/^/\$/;
eval $x;
$msp430f_step=$step;

my $msp430_f_step;
$x=`cat msp430-f/stepfile`;
$x=~s/^/\$/;
eval $x;
$msp430_f_step=$step;

my $nqhzig_step;
$x=`cat nqh-zig/stepfile`;
$x=~s/^/\$/;
eval $x;
$nqhzig_step=$step;

my $wasm32c_step;
$x=`cat wasm32-c/stepfile`;
$x=~s/^/\$/;
eval $x;
$wasm32c_step=$step;

my $pdk14stc_step;
$x=`cat pdk14-stc/stepfile`;
$x=~s/^/\$/;
eval $x;
$pdk14stc_step=$step;

my $pdk14thr1_step;
$x=`cat pdk14-thr1/stepfile`;
$x=~s/^/\$/;
eval $x;
$pdk14thr1_step=$step;

my $m6502c_step;
$x=`cat 6502-sdcc/stepfile`;
$x=~s/^/\$/;
eval $x;
$m6502c_step=$step;

my $m6502stc_step;
$x=`cat 6502-stc/stepfile`;
$x=~s/^/\$/;
eval $x;
$m6502stc_step=$step;

my $debug=0;
@ARGV=("C/forth.c");
while (<>) {
	if (/^\#define DEBUG/) {
		$debug=1;
	}
}

my $list=[qw(0 0.1 0.2 1 1.1),2..4,qw(4.1 4.2 4.3 4.4 4.5),5..9,qw(10.1 10.2 10.3),11..62];

for my $i (@$list) {

cport: {
	last cport unless ($c_check);
	last cport if ($i>$c_step);
	@ARGV=("C/fpp.config.C");
	open(my $fh, ">C/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the C port\n";
	if ($debug) {
		system("make 2>&1 | grep 'Segmentation fault .core dumped.'") ==0 and die "debug make failed at step $i with a segv";
		next;
	}
	system("cd C ; make") == 0 or die "make failed at step $i with exit status $?"
}

pdp11port: {
	last pdp11port unless ($pdp11_check);
	last pdp11port if ($i>$pdp11_step);
	@ARGV=("pdp11/fpp.config.pdp11");
	open(my $fh, ">pdp11/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the PDP11 port\n";
	system("cd pdp11 ; make") == 0 or die "make failed at step $i with exit status $?"
}

x86port: {
	last x86port unless ($x86_check);
	last x86port if ($i>$x86_step);
	@ARGV=("x86/fpp.config.x86");
	open(my $fh, ">x86/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the x86 port\n";
	system("cd x86 ; make") == 0 or die "make failed at step $i with exit status $?"
}

x86asport: {
	last x86asport unless ($x86as_check);
	last x86asport if ($i>$x86as_step);
	@ARGV=("x86/fpp.config.x86");
	open(my $fh, ">x86-as/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the x86-as port\n";
	system("cd x86-as ; make") == 0 or die "make failed at step $i with exit status $?"
}

x86userport: {
	last x86userport unless ($x86user_check);
	last x86userport if ($i>$x86user_step);
	@ARGV=("x86-user/fpp.config.x86");
	open(my $fh, ">x86-user/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the x86-user port\n";
	unlink "$ENV{'HOME'}/.cache/zig/h/5134bb1b90884b80849a213dfb44f106.txt";
	unlink "$ENV{'HOME'}/.cache/zig/h/93f4c4897e3cd0f00e758d6f40d7d236.txt";
	unlink "$ENV{'HOME'}/.cache/zig/h/8f5a8616e05941829b2580084028e434.txt";
	system("cd x86-user ; make") == 0 or die "make failed at step $i with exit status $?"
}

x86_32port: {
	last x86_32port unless ($x86_32_check);
	last x86_32port if ($i>$x86_32_step);
	@ARGV=("x86-32/fpp.config.x86");
	open(my $fh, ">x86-32/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the x86-32 port\n";
	unlink "$ENV{'HOME'}/.cache/zig/h/13fe8c23266be3a61b408f548b60c2f3.txt";
	unlink "$ENV{'HOME'}/.cache/zig/h/b142852685bf55dccd76d3d4d8328c3b.txt";
	unlink "$ENV{'HOME'}/.cache/zig/h/9dab5533a8c48dc83366e6c0e33143ef.txt";
	system("cd x86-32 ; make") == 0 or die "make failed at step $i with exit status $?"
}

x86_sysport: {
	last x86_sysport unless ($x86_sys_check);
	last x86_sysport if ($i>$x86_sys_step);
	@ARGV=("x86-sys/fpp.config.x86");
	open(my $fh, ">x86-sys/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the x86-sys port\n";
	system("cd x86-sys ; make") == 0 or die "make failed at step $i with exit status $?"
}

m68k_port: {
	last m68k_port unless ($m68k_check);
	last m68k_port if ($i>$m68k_step);
	@ARGV=("m68k/fpp.config.m68k");
	open(my $fh, ">m68k/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the m68k port\n";
	system("cd m68k ; make") == 0 or die "make failed at step $i with exit status $?"
}

sparc_port: {
	last sparc_port unless ($sparc_check);
	last sparc_port if ($i>$sparc_step);
	@ARGV=("sparc/fpp.config.sparc");
	open(my $fh, ">sparc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the sparc port\n";
	system("cd sparc ; make") == 0 or die "make failed at step $i with exit status $?"
}

z80_port: {
	last z80_port unless ($z80_check);
	last z80_port if ($i>$z80_step);
	@ARGV=("z80/fpp.config.z80");
	open(my $fh, ">z80/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the z80 port\n";
	system("cd z80 ; make") == 0 or die "make failed at step $i with exit status $?"
}

z80c_port: {
	last z80c_port unless ($z80c_check);
	last z80c_port if ($i>$z80c_step);
	@ARGV=("z80-c/fpp.config.C");
	open(my $fh, ">z80-c/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) {
		print;
	}
	close $fh;
	select STDOUT;
	print "\nRunning step $i for the z80-c port\n";
	system("cd z80-c ; make") == 0 or die "make failed at step $i with exit status $?"
}

z180c_port: {
	last z180c_port unless ($z180c_check);
	last z180c_port if ($i>$z180c_step);
	@ARGV=("z180-sdcc/fpp.config.C");
	open(my $fh, ">z180-sdcc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the z180 port\n";
	system("cd z180-sdcc ; make") == 0 or die "make failed at step $i with exit status $?";
}

z80n_c_port: {
	last z80n_c_port unless ($z80n_c_check);
	last z80n_c_port if ($i>$z80n_c_step);
	@ARGV=("z80n-sdcc/fpp.config.C");
	open(my $fh, ">z80n-sdcc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the C port\n";
	system("cd z80n-sdcc ; make") == 0 or die "make failed at step $i with exit status $?";
}

msp430as_port: {
	last msp430as_port unless ($msp430as_check);
	last msp430as_port if ($i>$msp430as_step);
	@ARGV=("msp430-as/fpp.config.msp430");
	open(my $fh, ">msp430-as/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the msp430 port\n";
	system("cd msp430-as ; make") == 0 or die "make failed at step $i with exit status $?";
}

armzigcc_port: {
	last armzigcc_port unless ($armzigcc_check);
	last armzigcc_port if ($i>$armzigcc_step);
	@ARGV=("arm-zigcc/fpp.config.C");
	open(my $fh, ">arm-zigcc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the arm port\n";
	system("cd arm-zigcc ; make") == 0 or die "make failed at step $i with exit status $?";
}

armas_port: {
	last armas_port unless ($armas_check);
	last armas_port if ($i>$armas_step);
	@ARGV=("arm64-sys/fpp.config.arm");
	open(my $fh, ">arm64-sys/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the arm64-sys port\n";
	system("cd arm64-sys ; make") == 0 or die "make failed at step $i with exit status $?";
}

rv64as_port: {
	last rv64as_port unless ($rv64as_check);
	last rv64as_port if ($i>$rv64as_step);
	@ARGV=("rv64-sys/fpp.config.riscv");
	open(my $fh, ">rv64-sys/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the riscv port\n";
	system("cd rv64-sys ; make") == 0 or die "make failed at step $i with exit status $?";
}

riscv32as_port: {
	last riscv32as_port unless ($riscv32as_check);
	last riscv32as_port if ($i>$riscv32as_step);
	@ARGV=("rv32-sys/fpp.config.riscv");
	open(my $fh, ">rv32-sys/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the riscv port\n";
	system("cd rv32-sys ; make") == 0 or die "make failed at step $i with exit status $?";
}

msp430stc_port: {
	last msp430stc_port unless ($msp430stc_check);
	last msp430stc_port if ($i>$msp430stc_step);
	@ARGV=("msp430-stc/fpp.config.msp430");
	open(my $fh, ">msp430-stc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the msp430 port\n";
	system("cd msp430-stc ; make") == 0 or die "make failed at step $i with exit status $?";
}

z80stc_port: {
	last z80stc_port unless ($z80stc_check);
	last z80stc_port if ($i>$z80stc_step);
	@ARGV=("z80-stc/fpp.config.z80");
	open(my $fh, ">z80-stc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the z80 port\n";
	system("cd z80-stc ; make") == 0 or die "make failed at step $i with exit status $?";
}

msp430f_port: {
	last msp430f_port unless ($msp430f_check);
	last msp430f_port if ($i>$msp430f_step);
	@ARGV=("msp430-fcode/fpp.config.msp430");
	open(my $fh, ">msp430-fcode/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the msp430 port\n";
	system("cd msp430-fcode ; make") == 0 or die "make failed at step $i with exit status $?";
}

msp430_f_port: {
	last msp430_f_port unless ($msp430_f_check);
	last msp430_f_port if ($i>$msp430_f_step);
	@ARGV=("msp430-f/fpp.config.msp430");
	open(my $fh, ">msp430-f/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the msp430 port\n";
	system("cd msp430-f ; make") == 0 or die "make failed at step $i with exit status $?";
}

nqhzig_port: {
	last nqhzig_port unless ($nqhzig_check);
	last nqhzig_port if ($i>$nqhzig_step);
	@ARGV=("nqh-zig/fpp.config.nqh");
	open(my $fh, ">nqh-zig/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the nqh-zig port\n";
	system("cd nqh-zig ; make") == 0 or die "make failed at step $i with exit status $?";
}

wasm32c_port: {
	last wasm32c_port unless ($wasm32c_check);
	last wasm32c_port if ($i>$wasm32c_step);
	@ARGV=("wasm32-c/fpp.config.C");
	open(my $fh, ">wasm32-c/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the C port\n";
	system("cd wasm32-c ; make") == 0 or die "make failed at step $i with exit status $?";
}

pdk14stc_port: {
	last pdk14stc_port unless ($pdk14stc_check);
	last pdk14stc_port if ($i>$pdk14stc_step);
	@ARGV=("pdk14-stc/fpp.config.pdk");
	open(my $fh, ">pdk14-stc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the pdk port\n";
	system("cd pdk14-stc ; make") == 0 or die "make failed at step $i with exit status $?";
}

pdk14thr1_port: {
	last pdk14thr1_port unless ($pdk14thr1_check);
	last pdk14thr1_port if ($i>$pdk14thr1_step);
	@ARGV=("pdk14-thr1/fpp.config.pdk");
	open(my $fh, ">pdk14-thr1/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the pdk port\n";
	system("cd pdk14-thr1 ; make") == 0 or die "make failed at step $i with exit status $?";
}

m6502c_port: {
	last m6502c_port unless ($m6502c_check);
	last m6502c_port if ($i>$m6502c_step);
	@ARGV=("6502-sdcc/fpp.config.C");
	open(my $fh, ">6502-sdcc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the 6502 port\n";
	system("cd 6502-sdcc ; make") == 0 or die "make failed at step $i with exit status $?";
}

m6502stc_port: {
	last m6502stc_port unless ($m6502stc_check);
	last m6502stc_port if ($i>$m6502stc_step);
	@ARGV=("6502-stc/fpp.config.6502");
	open(my $fh, ">6502-stc/fpp.config");
	select $fh;
	print "step=$i\n";
	while (<>) { print; }
	close $fh; select STDOUT;
	print "\nRunning step $i for the 6502 port\n";
	system("cd 6502-stc ; make") == 0 or die "make failed at step $i with exit status $?";
}

}
