# code.prims : mapping from the Fcode & Forth primitives to MSP430 assembly
#
# Copyright (c) 2024 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

$0x7F	bye	: nop
$32	next	: jmp realnext
[	dup	: push tos ;
d	2drop	: pop tos
]	drop	: pop tos ;
<	key	: dup ; mov #0xff, w ; mov.b @w, tos ;
>	emit	: mov #0xff, w ; mov.b tos, @w ; drop ;
1	lit1	: dup ; mov.b @ip+, tos ; sxt tos ;
2	lit	: dup ; mov.b @ip+, tmp ; mov.b @ip+, tos ; swpb tos ; bis tmp, tos ;
n	neg	: inv tos ; inc tos ;
j	j	: mov.b @ip+, tmp ; sxt tmp ; add tmp, ip ;
=	jz	: and tos, tos ; drop ; jz j ; add #1, ip ;
$35	jnz	: and tos, tos ; drop ; jnz j ; add #1, ip ;
T	inc	: inc tos ;
t	dec	: dec tos ;
v	inv	: inv tos ;
p	nip	: pop nos ;
P	dip	: push nos ;
-	-	: neg
+	+	: nip ; add nos, tos ;
&	&	: nip ; and nos, tos ;
|	|	: nip ; bis nos, tos ;
^	^	: nip ; xor nos, tos ;
S	swap	: nip ; dup ; mov nos, tos ;
K	pick	: rla tos ; add sp, tos
@	@	: mov @tos, tos ;
k	stick	: rla tos ; add sp, tos
!	!	: pop @tos ; drop ;
C	c@	: mov.b @tos, tos ;
c	c!	: pop.b @tos ; drop ;
'	sp@!	: mov sp, nos ; mov tos, sp ; mov nos, tos ;
"	rp@!	: mov rp, nos ; mov tos, rp ; mov nos, tos ;
f	>r	: mov tos, @rp ; incd rp ; drop ;
F	r>	: dup ; decd rp ; mov @rp, tos ;
x	exec	: mov tos, nos ; drop ; rla nos ; add #jmptbl, nos ; br @nos
$0	exit	: decd rp ; mov @rp, ip ;
X	call	: mov ip, @rp ; incd rp ; mov tos, ip ; drop ;

var here .word mem
var state .byte 1
