# code.prims : mapping from the Forth primitives to Padauk assembly
#
# Copyright (c) 2024 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

bye	: popaf ; ret
key	: call dup ; mov a, #0x7f ; mov p, a ; mov a, #'r' ; idxm p, a ; idxm a, p ; ret
emit	: pushaf ; mov a, #0x7f ; mov p, a ; mov a, #'w' ; idxm p, a ; popaf ; idxm p, a ; call drop ; ret
dup	: dec dp ; idxm dp, a ; ret
2drop	: call drop
drop	: idxm a, dp ; inc dp ; ret
neg	: neg a ; ret
inc	: add a, #1 ; ret
dec	: add a, #-1 ; ret
inv	: not a ; ret
nip	: mov sa, a ; idxm a, dp ; inc dp ; mov nos, a ; mov a, sa ; ret
dip	: mov sa, a ; mov a, nos ; dec dp ; idxm dp, a ; mov a, sa ; ret
-	: call neg
+	: call nip ; add a, nos ; ret
&	: call nip ; and a, nos ; ret
|	: call nip ;  or a, nos ; ret
^	: call nip ; xor a, nos ; ret
swap	: call nip ; call dup ; mov a, nos ; ret
pick	: add a, dp
@	: mov sa, a ; idxm a, sa ; ret
stick	: add a, dp
!	: mov sa, a ; call drop ; idxm sa, a ; call drop ; ret
c@	: @
c!	: !
sp@!	: xch a, dp ; ret

var here
var state
