# code.prims : mapping from the Forth primitives to native sparc assembly
#
# Copyright (c) 2023 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

next	: ldub [ip], w ; jmp i+w ; inc ip
dup	: st tos, [sp] ; jmp i ; add sp, 4, sp
2drop	: add sp, -4, sp
drop	: add sp, -4, sp ; jmp i ; ld [sp], tos
key	: b,a key1
emit	: b,a emit1
lit	: b reallit ; st tos, [sp]
neg	: jmp i ; neg tos
j	: b,a branch
jz	: b brz ; tst tos
jnz	: b brnz ; tst tos
inc	: jmp i ; inc tos
dec	: jmp i ; dec tos
inv	: jmp i ; not tos
dip	: b,a realdip
nip	: b,a realnip
-	: neg tos
+	: b realadd ; add sp, -4, sp
&	: b realand ; add sp, -4, sp
|	: b realor ; add sp, -4, sp
^	: b realxor ; add sp, -4, sp
swap	: jmp i ; swap [sp-4], tos
pick	: b realpick ; inc tos
@	: b,a fetch
stick	: b realstick ; inc tos
!	: b,a store
c@	: b,a cfetch
c!	: b,a cstore
sp@!	: b spswap ; mov sp, temp
rp@!	: b rpswap ; mov rp, temp
>r	: b tor ; add sp, -4, sp
r>	: b,a fromr
exec	: b realexec ; add sp, -4, sp
enter	: b,a realenter
exit	: b,a realexit
call	: b,a realcall
<<	: b,a lshift
>>	: b,a rshift
over	: b,a realover
bye	: jmpl link+8,%g0 ; nop ; .data

var here .long mem
var state .byte 1
