# code.prims : mapping from the Forth primitives to native sparc assembly
#
# Copyright (c) 2023 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

next	: ldub [ip], w ; jmp i+w ; inc ip
bye	: jmpl link+8,%g0 ; nop
dup	: st tos, [sp] ; jmp i ; add sp, 4, sp
2drop	: add sp, -4, sp
drop	: add sp, -4, sp ; jmp i ; ld [sp], tos
key	: b,a key1
emit	: b,a emit1
lit	: b reallit ; st tos, [sp]
neg	: jmp i ; neg tos
jdrop	: ld [sp], tos
j	: ldsb [ip], offset ; inc ip ; jmp i ; add ip, offset, ip
jz	: tst tos ; be jdrop ; add sp, -4, sp ; b,a jcommon
jnz	: tst tos ; bne jdrop ; add sp, -4, sp ; b,a jcommon
inc	: jmp i ; inc tos
dec	: jmp i ; dec tos
inv	: jmp i ; not tos
dip	: st nos, [sp] ; jmp i ; add sp, 4, sp
nip	: add sp, -4, sp ; jmp i ; ld [sp], nos
-	: neg tos
+	: add sp, -4, sp ; ld [sp], nos ; jmp i ; add tos, nos, tos
&	: add sp, -4, sp ; ld [sp], nos ; jmp i ; and tos, nos, tos
|	: add sp, -4, sp ; ld [sp], nos ; jmp i ; or tos, nos, tos
^	: add sp, -4, sp ; ld [sp], nos ; jmp i ; xor tos, nos, tos
swap	: jmp i ; swap [sp-4], tos
@	: b,a fetch
!	: b,a store ; .data

var here .long mem
