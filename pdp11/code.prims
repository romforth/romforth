define ip	r0
define tos	r1
define sp	r2
define nos	r3
define rp	r4

define xcsr 0177514
define xbuf 0177516

define rcsr 0177560
define rbuf 0177562

cold	: mov $rom, ip ; mov $cold, sp
next	: jmp @(ip)+
bye	: halt
dup	: mov tos, -(sp) ;
key	: dup ; 1: ; tstb rcsr ; beq 1b ; movb rbuf, tos ;
2drop	: mov (sp)+, tos
drop	: mov (sp)+, tos ;
emit	: movb tos, xbuf ; 1: ; tstb xcsr ; beq 1b ; drop ;
nip	: mov (sp)+, nos ;
dip	: mov nos, -(sp) ;
>r	: mov tos, -(rp) ; drop ;
r>	: dup ; mov (rp)+, tos ;
lit	: dup ; mov (ip)+, tos ;
swap	: nip ; dup
t_n	: mov nos, tos ;
sp@!	: mov sp, nos ; mov tos, sp ; t_n ;
rp@!	: mov rp, nos ; mov tos, rp ; t_n ;
neg	: neg tos ;
inc	: inc tos ;
dec	: dec tos ;
inv	: com tos ;
-	: neg
+	: add (sp)+, tos ;
pick	: add tos, tos ; add sp, tos
@	: mov (tos), tos ;
stick	: add tos, tos ; add sp, tos
!	: mov (sp)+, (tos) ; drop ;
c@	: movb (tos), tos ;
c!	: nip ; movb nos, (tos) ; drop ;
|	: bis (sp)+, tos ;
^	: nip ; xor nos, tos ;
&	: nip ; com nos ; bic nos, tos ;
j	: 1: ; add (ip)+, ip ;
jz	: neg ; drop ; bcc 1b ; add $2, ip ;
jnz	: neg ; drop ; bcs 1b ; add $2, ip ;

var here	.word	mem
var state	.word	1

mem	:
