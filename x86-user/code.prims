# code.prims : mapping from the Forth primitives to x86 assembly userland code
#
# Copyright (c) 2023 Charles Suresh <romforth@proton.me>
# SPDX-License-Identifier: AGPL-3.0-only
# Please see the LICENSE file for the Affero GPL 3.0 license details

define w	%rax
define ip	%rsi
define sp	%rsp
define rp	%rbp
define tos	%rbx
define nos	%rcx
define out	%rdi

next	: lodsb ; jmp *w
dup	: push tos ;
2drop	: pop tos
drop	: pop tos ;
key	: dup ; push w ; push ip ; call getchar ; mov w, tos ; pop ip ; pop w ;
emit	: push w ; push ip ; dup ; pop out ; call putchar ; pop ip ; pop w ; drop ;
lit	: dup ; xchg tos, w ; lodsq ; xchg tos, w ;
neg	: neg tos ;
j	: push w ; xor w, w ; lodsb ; add w, ip ; pop w ;
jz	: neg tos ; drop ; jnc j ; inc ip ;
jnz	: neg tos ; drop ; jc j ; inc ip ;
inc	: inc tos ;
dec	: dec tos ;
inv	: not tos ;
nip	: pop nos ;
dip	: push nos ;
-	: neg tos
+	: nip ; add nos, tos ;
&	: nip ; and nos, tos ;
|	: nip ; or nos, tos ;
^	: nip ; xor nos, tos ;
swap	: nip ; dup
t_n	: mov nos, tos ;
pick	: shl $3, tos ; add sp, tos
@	: mov (tos), tos ;
stick	: shl $3, tos ; add sp, tos
!	: pop (tos) ; drop ;
c@	: mov (tos), %bl ; and $0xFF, tos ;
c!	: nip ; mov %cl, (tos) ; drop ;
sp@!	: xchg sp, tos ;
rp@!	: xchg rp, tos ;
bye	: ret

rw	: .data
var here .quad mem
var state .byte 1
